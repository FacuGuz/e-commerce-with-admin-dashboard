-- Create the 'StoreDashboard' database if it doesn't exist
-- This command is for psql. Run it separately if you haven't created the database yet.
-- CREATE DATABASE "StoreDashboard";
-- \c "StoreDashboard"; -- Connect to the new database

--
-- Table structure for `app_user`
--
CREATE TABLE IF NOT EXISTS app_user (
                                        id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                        username VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    email VARCHAR(255) UNIQUE NOT NULL,
    role VARCHAR(50) NOT NULL,
    created_at TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    updated_at TIMESTAMP WITHOUT TIME ZONE
    );

--
-- Table structure for `category`
--
CREATE TABLE IF NOT EXISTS category (
                                        id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                        name VARCHAR(255) UNIQUE NOT NULL
    );

--
-- Table structure for `product`
--
CREATE TABLE IF NOT EXISTS product (
                                       id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                       name VARCHAR(255),
    description TEXT,
    price DECIMAL(10, 2),
    stock INTEGER,
    image_path VARCHAR(255),
    category_id BIGINT,
    FOREIGN KEY (category_id) REFERENCES category(id)
    );

--
-- Table structure for `invoice`
--
CREATE TABLE IF NOT EXISTS invoice (
                                       id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                       total_amount DECIMAL(10, 2),
    invoice_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    updated_at TIMESTAMP WITHOUT TIME ZONE,
    user_id BIGINT,
    FOREIGN KEY (user_id) REFERENCES app_user(id)
    );

--
-- Table structure for `invoice_detail`
--
CREATE TABLE IF NOT EXISTS invoice_detail (
                                              id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                              quantity INTEGER,
                                              price DECIMAL(10, 2),
    invoice_id BIGINT,
    product_id BIGINT,
    FOREIGN KEY (invoice_id) REFERENCES invoice(id),
    FOREIGN KEY (product_id) REFERENCES product(id)
    );

--
-- Table structure for `payment_type`
--
CREATE TABLE IF NOT EXISTS payment_type (
                                            id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                            name VARCHAR(255)
    );

--
-- Table structure for `payment`
--
CREATE TABLE IF NOT EXISTS payment (
                                       id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
                                       amount DECIMAL(10, 2),
    payment_date TIMESTAMP WITHOUT TIME ZONE,
    invoice_id BIGINT,
    payment_type_id BIGINT,
    FOREIGN KEY (invoice_id) REFERENCES invoice(id),
    FOREIGN KEY (payment_type_id) REFERENCES payment_type(id)
    );

--
-- Insert sample data
--

-- Insert data into `app_user`
INSERT INTO app_user (username, password, email, role, created_at) VALUES
                                                                       ('johndoe', 'hashed_password_1', 'john.doe@example.com', 'ROLE_ADMIN', NOW()),
                                                                       ('janesmith', 'hashed_password_2', 'jane.smith@example.com', 'ROLE_USER', NOW());

-- Insert data into `category`
INSERT INTO category (name) VALUES ('Electronics'), ('Apparel'), ('Home Goods');

-- Insert data into `product`
INSERT INTO product (name, description, price, stock, image_path, category_id) VALUES
                                                                                   ('Laptop Pro', 'A powerful laptop.', 1500.00, 50, '/images/laptop.png', 1),
                                                                                   ('Smartphone X', 'The latest smartphone.', 800.00, 200, '/images/smartphone.png', 1),
                                                                                   ('T-Shirt', 'A comfortable cotton t-shirt.', 25.00, 500, '/images/tshirt.png', 2);

-- Insert data into `invoice`
INSERT INTO invoice (total_amount, invoice_date, user_id) VALUES
                                                              (1525.00, NOW(), 1),
                                                              (800.00, NOW(), 2);

-- Insert data into `invoice_detail`
INSERT INTO invoice_detail (quantity, price, invoice_id, product_id) VALUES
                                                                         (1, 1500.00, 1, 1), -- 1 Laptop Pro for Invoice 1
                                                                         (1, 25.00, 1, 3),   -- 1 T-Shirt for Invoice 1
                                                                         (1, 800.00, 2, 2);  -- 1 Smartphone X for Invoice 2

-- Insert data into `payment_type`
INSERT INTO payment_type (name) VALUES ('Credit Card'), ('Debit Card'), ('Cash');

-- Insert data into `payment`
INSERT INTO payment (amount, payment_date, invoice_id, payment_type_id) VALUES
                                                                            (1525.00, NOW(), 1, 1),
                                                                            (800.00, NOW(), 2, 2);